//! –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç —Å –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–º —Å–∂–∞—Ç–∏–µ–º üöÄ
//!
//! –°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π.
//! –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞ 30 —Å–µ–∫—É–Ω–¥.

use arithmetic_compression_wizard::simple_api::{compress_data, decompress_data};

fn main() {
    println!("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç —Å –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–º —Å–∂–∞—Ç–∏–µ–º\n");

    // 1. –ü—Ä–æ—Å—Ç–æ–µ —Å–∂–∞—Ç–∏–µ —Ç–µ–∫—Å—Ç–∞
    let original = "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∂–∞—Ç–∏—è –Ω–∞ Rust.".as_bytes();

    println!(
        "üìù –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: \"{}\"",
        String::from_utf8_lossy(original)
    );
    println!("   –†–∞–∑–º–µ—Ä: {} –±–∞–π—Ç", original.len());

    // 2. –°–∂–∏–º–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    let compressed = compress_data(original);
    println!("\nüì¶ –°–∂–∞—Ç–æ –≤ {} –±–∞–π—Ç", compressed.len());

    // 3. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    let restored = decompress_data(compressed.clone());
    println!("üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {} –±–∞–π—Ç", restored.len());

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
    if original == restored.as_slice() {
        println!("‚úÖ –î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –±–µ–∑ –ø–æ—Ç–µ—Ä—å!");
    } else {
        println!("‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è!");
    }

    // 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    let ratio = if original.len() > 0 {
        (1.0 - compressed.len() as f64 / original.len() as f64) * 100.0
    } else {
        0.0
    };

    println!("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:");
    if ratio > 0.0 {
        println!("   –°–∂–∞—Ç–∏–µ: {:.1}% —ç–∫–æ–Ω–æ–º–∏–∏", ratio);
    } else {
        println!("   –î–∞–Ω–Ω—ã–µ —É–≤–µ–ª–∏—á–∏–ª–∏—Å—å –Ω–∞ {:.1}% (–º–∞–ª—ã–π —Ä–∞–∑–º–µ—Ä)", -ratio);
    }

    println!("\nüéØ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –ø—Ä–∏–º–µ—Ä—ã:");
    println!("   cargo run --example basic_compression_demo");
    println!("   cargo run --example interactive_demo");
    println!("   cargo run --example file_compression_demo");
    println!("   cargo run --example advanced_features_demo");
}
